openapi: 3.0.3
info:
  title: ITspace - OpenAPI 3.0
  description: |-
     itSpace API documentation, binar final project K13
  contact:
    email: rian.rafli@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
tags:
  - name: courses
    description: Everything about courses
  
paths:
  /courses:
    post:
      tags:
        - courses
      description: create new course
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Courses'

      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/basicResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/coursesModel'
                    
                    
                    
                    
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
        '500':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'          
      

components:
  schemas:
    basicResponse:
      title: basicResponse
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "successfully do task"
    ErrorResponse400:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "failed to do task"
        data:
          type: integer
          nullable: true
          example : null
    ErrorResponse401:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Unauthorized"
        data:
          type: integer
          nullable: true
          example : null
    ErrorResponse403:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Forbidden"
        data:
          type: integer
          nullable: true
          example : null
    ErrorResponse404:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "not found"
        data:
          type: integer
          nullable: true
          example : null
    ErrorResponse500:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "failed to do task"
        data:
          type: integer
          nullable: true
          example : null
    coursesModel:
      title: course
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Backend dengan expressjs"
        price:
          type: integer
          example: 900000
        level:
          type: string
          example: "BEGINNER"
        isPremium:
          type: boolean
          example: true
        mentor:
          type: array
          items:
            type: string
          example : ["mentor1@gmail.com","mentor2@gmail.com"]
        category:
          type: array
          items:
            type: string
          example : ["Backend","Database"]

    Courses:
      type: object
      properties:
        title:
          type: string
          example: Backend dengan expressjs
        price:
          type: integer
          example: 200000
        level:
          type: string
          example: BEGINNER
        isPremium:
          type: boolean
          example: true
        description:
          type: string
          example: "course ini akan mengejarkan kamu tentang API"
        mentor:
           type: array
           items:
            type: string
           example : ["rian@gmail.com","rafli@gmail.com"]
        category:
          type: array
          items:
            type: string
          example : ["Backend","Database"]
